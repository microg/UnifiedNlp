/*
 * Copyright 2013-2016 microG Project Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

/* This is a hack, trying to provide release updates to F-Droid until it can properly handle Gradle
applicationId "org.microg.nlp"
applicationId "com.google.android.gms"
applicationId "com.google.android.location"
versionName "1.6.8"
versionCode "20187"
 */

String getMyVersionName() {
    def stdout = new ByteArrayOutputStream()
    if (rootProject.file("gradlew").exists())
        exec { commandLine 'git', 'describe', '--tags', '--always', '--dirty'; standardOutput = stdout }
    else // automatic build system, don't tag dirty
        exec { commandLine 'git', 'describe', '--tags', '--always'; standardOutput = stdout }
    return stdout.toString().trim().substring(1)
}

int getMyVersionCode() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-list', '--count', "HEAD"
        standardOutput = stdout
    }
    return Integer.parseInt(stdout.toString().trim())
}

android {
    compileSdkVersion androidCompileSdk()
    buildToolsVersion "$androidBuildVersionTools"
    
    defaultConfig {
        versionName getMyVersionName()
        versionCode(20000 + getMyVersionCode())
        minSdkVersion androidMinSdk()
        targetSdkVersion androidTargetSdk()
    }
    
    productFlavors {
        UnifiedNlp {
            applicationId = 'org.microg.nlp'
        }
    }

    lintOptions {
        disable 'MissingTranslation', 'InvalidPackage', 'BatteryLife', 'ImpliedQuantity', 'MissingQuantity'
        checkReleaseBuilds false
          // Or, if you prefer, you can continue to check for errors in release builds,
          // but continue the build even when errors are found:
        abortOnError false

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
    }
}

dependencies {
    compile project(':unifiednlp-base')
    compile project(":microg-ui-tools")
    compile project(':unifiednlp-api')
    provided project(':unifiednlp-compat')
}

if (file('user.gradle').exists()) {
    apply from: 'user.gradle'
}
